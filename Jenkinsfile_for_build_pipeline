
//START PIPELINE
pipeline {
agent {label 'mvn'}

  //Define needed parameters
  parameters{
                    // Parameters used for Building Stage of Package
   string(defaultValue: 'https://github.com/hluci93/maven-web-application', description: 'GitHub Repository used for importing configuration.', name: 'git_repo')
   string(defaultValue: 'master', description: 'Specify your Git branch', name: 'git_repo_branch')
   string(defaultValue: './target/maven-web-application', description: 'WAR file used for deploying.', name: 'war_file')
                           
  }
      
    options{
    timestamps()
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '2', numToKeepStr: '5'))
    }

tools {
          maven "3.8.5"
        }
stages {

  stage("Git-Checkout")
        {
            steps 
                {
                // Get code from GitHub repository
                git branch: "${params.git_repo_branch}", credentialsId: 'c9d8cdef-1edb-4e31-9682-ed6d205f722b', url: "${params.git_repo}"
                }
        } 
stage("Build & SonarQube analysis") {
            //SonarQube Analysis of the Java Code
            steps {
              withSonarQubeEnv('SonarqubeServer') {
                sh 'mvn clean package sonar:sonar'
              }
            }
          }
stage("Quality Gate") {
            steps {
              timeout(time: 5, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
        }
        
// stage ('Artifactory Deploy'){
  //        steps
    //            { //Deploy to Artifactory
      //          echo 'Deploy package to Artifactory'
        //        sh """mvn deploy:deploy-file -Dfile=${params.war_file}.war -Durl="http://192.168.72.199:8082/artifactory/maven_repo" -DrepositoryId="central" -DuniqueVersion=true -DgroupId="maven_webapp_first" -DartifactId="maven-web-application" -Dversion="latest" """
          //      }
         // }
  
      }//Stages Closing
}//Pipeline closing



